lib_dir=$(base_dir)/lib

ROCKETCHIP_DIR=$(base_dir)/rocket-chip
EXTRA_PACKAGES=testchipip boom
SCALA_VERSION=2.11.7

rocketchip_stamp=$(base_dir)/lib/rocketchip.stamp
SBT ?= java -Xmx2G -Xss8M -XX:MaxPermSize=256M -jar $(ROCKETCHIP_DIR)/sbt-launch.jar
OBJCOPY=riscv64-unknown-elf-objcopy
extra_stamps = $(addprefix $(lib_dir)/,$(addsuffix .stamp,$(EXTRA_PACKAGES)))

lookup_scala_srcs = $(shell find $(1)/ -iname "*.scala" 2> /dev/null)

libs: $(rocketchip_stamp) $(extra_stamps)

FIRRTL_JAR ?= $(ROCKETCHIP_DIR)/firrtl/utils/bin/firrtl.jar
FIRRTL ?= java -Xmx2G -Xss8M -XX:MaxPermSize=256M -cp $(FIRRTL_JAR) firrtl.Driver

$(rocketchip_stamp): $(call lookup_scala_srcs, $(ROCKETCHIP_DIR)) $(FIRRTL_JAR)
	cd $(ROCKETCHIP_DIR) && $(SBT) pack
	mkdir -p $(lib_dir)
	cp $(ROCKETCHIP_DIR)/target/pack/lib/*.jar $(lib_dir)
	touch $(rocketchip_stamp)

-include $(base_dir)/Makefrag.pkgs

$(base_dir)/Makefrag.pkgs: $(base_dir)/generate-pkg-mk.sh
	bash $(base_dir)/generate-pkg-mk.sh $(EXTRA_PACKAGES) > $@

$(FIRRTL_JAR): $(call lookup_scala_srcs, $(ROCKETCHIP_DIR)/firrtl/src/main/scala)
	$(MAKE) -C $(ROCKETCHIP_DIR)/firrtl SBT="$(SBT)" root_dir=$(ROCKETCHIP_DIR)/firrtl build-scala
	mkdir -p $(ROCKETCHIP_DIR)/lib
	cp -p $(FIRRTL_JAR) $(ROCKETCHIP_DIR)/lib

build_dir=$(sim_dir)/generated-src

bootrom_img = $(base_dir)/bootrom/bootrom.rv64.img $(base_dir)/bootrom/bootrom.rv32.img

CHISEL_ARGS ?=

$(build_dir)/$(PROJECT).$(MODEL).$(CONFIG).fir: $(rocketchip_stamp) $(extra_stamps) $(call lookup_scala_srcs,$(base_dir)/src/main/scala) $(bootrom_img)
	mkdir -p $(build_dir)
	cd $(base_dir) && $(SBT) "run-main $(PROJECT).Generator $(CHISEL_ARGS) $(build_dir) $(PROJECT) $(MODEL) $(CFG_PROJECT) $(CONFIG)"

$(build_dir)/$(PROJECT).$(MODEL).$(CONFIG).v: $(build_dir)/$(PROJECT).$(MODEL).$(CONFIG).fir $(FIRRTL_JAR)
	$(FIRRTL) -i $< -o $@ -X verilog

regression-tests = \
	rv64ud-v-fcvt \
        rv64ud-p-fdiv \
        rv64ud-v-fadd \
        rv64uf-v-fadd \
        rv64um-v-mul \
        rv64si-p-wfi \
        rv64um-v-divw \
        rv64ua-v-lrsc \
        rv64ui-v-fence_i \
        rv64ud-v-fcvt_w \
        rv64uf-v-fmin \
        rv64ui-v-sb \
        rv64ua-v-amomax_d \
        rv64ud-v-move \
        rv64ud-v-fclass \
        rv64ua-v-amoand_d \
        rv64ua-v-amoxor_d \
        rv64si-p-sbreak \
        rv64ud-v-fmadd \
        rv64uf-v-ldst \
        rv64um-v-mulh \
        rv64si-p-dirty

benchmarks = \
	dhrystone \
	median \
	multiply \
	qsort \
	rsort \
	towers \
	vvadd \

#benchmarks = \
#	dhrystone \
#	median \
#	multiply \
#	qsort \
#	rsort \
#	towers \
#	vvadd \

output_dir=$(sim_dir)/output

$(output_dir)/%: $(RISCV)/riscv64-unknown-elf/share/riscv-tests/isa/%
	mkdir -p $(output_dir)
	ln -sf $< $@

$(output_dir)/.dummy:
	mkdir -p $(output_dir)
	touch $@

bmarks_dir=$(base_dir)/install/riscv-bmarks
